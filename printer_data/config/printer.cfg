[include fluidd.cfg]
[include shell_command.cfg]
# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.
## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
####### MCU paths                            [mcu] section
####### Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
####### Hotend heater pin                    [extruder] section
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
####### Z Endstop Switch  offset for Z0      [stepper_z] section
## Stepper Z1 enable pin                [stepper_z1] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

#   33 back  2 left offset
#   292 376 endstop

### M E R C E N D E R T W O

# INCLUDES #########################
[include mainsail.cfg]
[include timelapse.cfg]

[mcu]
canbus_uuid: f65341bfd038
#restart_method: command

[mcu EBBCan]  #EBB36 V1.2
canbus_uuid: 55e49469bc7d

[adxl345]     #EBB36 V1.2 included
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: x,y,z

##--------------------------------------------------------------------
[display_status]
[pause_resume]
[virtual_sdcard]
path: ~/printer_data/gcodes

[bltouch]
sensor_pin: ^EBBCan: PB8
control_pin: EBBCan: PB9
x_offset: -38.0
y_offset: -5
#z_offset: 0
probe_with_touch_mode: True
stow_on_each_sample: false   # Keep the probe extended between points
samples: 3                   # Probe each point at least twice
samples_tolerance: 0.0125    # If those measurements aren't this close then
samples_tolerance_retries: 5 # Re-probe this many times and use the average
lift_speed: 40
speed: 5

[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x %}
        {% if x_min < 0 %}
            {% set x_min = 0 %}
        {% endif %}
    
        {% set y_min = printer.toolhead.axis_minimum.y %}
        {% if y_min < 0 %}
            {% set y_min = 0 %}
        {% endif %}
    
        {% set x_min = x_min + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = y_min + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED
    

####  AUTOSPEED DATA FROM 1st Run
#10:08 PM
#AUTO SPEED found recommended acceleration and velocity after 170.97s
#| DIAG X max: a33387 v524
#| DIAG Y max: a31737 v503
#Recommended accel: 31737
#Recommended velocity: 503
#
#AUTO SPEED found recommended acceleration and velocity after 181.75s
#| DIAG X max: a30912 v710
#| DIAG Y max: a29262 v482
#Recommended accel: 29262
#Recommended velocity: 482
####
[printer]
kinematics: corexy
max_velocity: 450  
max_accel: 15000            #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 100
square_corner_velocity: 5.0

[resonance_tester]
accel_chip: adxl345
probe_points:
    175, 175, 10

[neopixel my_led]
pin: EBBCan: PD3
chain_count: 1
color_order: GRB
initial_RED: 0.5
initial_GREEN: 0.5
initial_BLUE: 0.5
initial_WHITE: 0.0

### MERCURY SHIT HERE
# Enable arcs support
[gcode_arcs]
resolution: 0.1

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
[stepper_x]
step_pin: PF13
dir_pin: !PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200
endstop_pin: EBBCan: PB6
position_min: -50
position_endstop: 388
position_max: 400
position_min: -7
homing_speed: 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 1.5
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
[stepper_y]
step_pin: PG0
dir_pin: !PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200
endstop_pin: PG9
position_min: -60
position_endstop: 378
position_max: 378
homing_speed: 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 1.5
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
#step_pin: PF11
step_pin: PC13
#dir_pin: !PG3
dir_pin: !PF0
#enable_pin: !PG5
enable_pin: !PF1
rotation_distance: 4
microsteps: 16
endstop_pin: probe:z_virtual_endstop #PG15 #EBBCan: PB5
position_max: 400
position_min: -10
homing_speed: 10
second_homing_speed: 3
homing_retract_dist: 10

[tmc2209 stepper_z]
#uart_pin: PC6
uart_pin: PE4
interpolate: false
run_current: 1.0
stealthchop_threshold: 0

[stepper_z1]   #Skip the SHARED #3 to instead go to #4 driver!!
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
rotation_distance: 4
microsteps: 16


[tmc2209 stepper_z1]
uart_pin: PF2
interpolate: false
run_current: 1.0
stealthchop_threshold: 999999

#####################################################################
#   Extruder
#####################################################################
[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
rotation_distance: 4.636
microsteps: 16
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: EBBCan: PB13
sensor_type: ATC Semitec 104GT-2
sensor_pin: EBBCan: PA3
min_temp: 0
max_temp: 300
max_power: .8
min_extrude_temp: 170
#control = pid
#pid_kp = 0
#pid_ki = 0
#pid_kd = 0
pressure_advance: 0.032
pressure_advance_smooth_time: 0.03
max_extrude_only_distance: 150

[tmc2209 extruder]
uart_pin: EBBCan: PA15
interpolate: true
run_current: 0.85
hold_current: 0.100
sense_resistor: 0.11
stealthchop_threshold: 0

#####################################################################
#   Bed Heater
#####################################################################
[heater_bed]
heater_pin: PA3
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PF3
max_power: 1.0
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

[bed_mesh]
speed: 500
horizontal_move_z: 10
mesh_min: 10, 10
mesh_max: 350, 350
probe_count: 6,6
mesh_pps: 2,2
zero_reference_position: 175, 175

[input_shaper]
shaper_freq_x: 58.6
shaper_type_x: mzv
shaper_freq_y: 40.0
shaper_type_y: zv

#####################################################################
#   Fan Control
#####################################################################

##  Print Cooling Fan - FAN0
[fan]
pin: EBBCan: PA1
kick_start_time: 0.5
off_below: 0.10

##  Hotend Fan - FAN1
[heater_fan hotend_fan]
pin: EBBCan: PA0
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: .7

##  Controller fan - FAN2
[controller_fan controller_fan]
pin: PD12
kick_start_time: 0.5
heater: heater_bed

[screws_tilt_adjust]
screw1: 72, 56
screw1_name: front left screw
screw2: 374, 56
screw2_name: front right screw
screw3: 374, 319
screw3_name: rear right screw
screw4: 72, 319
screw4_name: rear left screw
horizontal_move_z: 10
speed: 250
screw_thread: CW-M4

[z_tilt]
z_positions: -20,186
            395,186
points:    59,186
          384,186
speed: 500
horizontal_move_z: 20
retries: 9
retry_tolerance: 0.005

#####################################################################
#   LED Control
#####################################################################

[gcode_macro _KNOMI_STATUS]
variable_homing: False
variable_probing: False
variable_qgling: False
variable_heating_nozzle: False
variable_heating_bed: False
gcode:

[gcode_macro M109]
rename_existing: M109.1
gcode:
  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_nozzle VALUE=True
  M109.1 {rawparams}
  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_nozzle VALUE=False

[gcode_macro M190]
rename_existing: M190.1
gcode:
  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_bed VALUE=True
  M190.1 {rawparams}
  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_bed VALUE=False


#[gcode_macro BED_MESH_CALIBRATE]
#rename_existing: BTT_BED_MESH_CALIBRATE
#gcode:
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=True
#  BTT_BED_MESH_CALIBRATE
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=False

## Chamber Lighting - HE2 Connector (Optional)
#[output_pin caselight]
##Octopus 1.0 & 1.1, Octopus PRO 1.0
#pin: PB10
##Octopus PRO 1.1
#pin: PB0
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
home_xy_position:175,175
speed:100
z_hop:10

[auto_speed]

#####################################################################
#   Macros
#####################################################################
[gcode_macro M0]
gcode:
  PAUSE

[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{350} Y{350} Z30  

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(65)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(205)|float %}
    
    # Start bed heating
    SET_LED LED=my_led RED=1 GREEN=0 BLUE=0 WHITE=0
    M190 S{BED_TEMP}
    # Use absolute coordinates
    G90
 
    BED_MESH_PROFILE LOAD="default"
     
    # Wait for bed to reach temperature
    
    M109 S{EXTRUDER_TEMP}
    # Turn on Knomi HOMING Graphic and HOME AXIS
    HOME_ON
    G28
    HOME_OFF
    #Z_TILT_ADJUST
    #Nozzle_Wipe
   
    SET_LED LED=my_led RED=1 GREEN=1 BLUE=1 WHITE=0
    # Let's wipe the snot on the bed from 1,1 to 300,1 then back again.
    G92 E0 ;Reset Extruder
    
    G1 Z15.0 F3000 ;Move Z Axis up
    G1 X10 Y1 F7000.0 ;Move to start position
#    G1 Z0.2
#    G1 X100 Y1 z0.2 F1500.0 E20 ;Draw the first line
#    G1 X100 Y1.4 Z0.2 F1500.0 ;Move to side a little
#    G1 X10 Y1.4 F1500.0 E20 ;Draw the second line
    G1 X5 Y5 Z0.8 F3000.0 ; move to blob 1 position
    G1 F200 E15 ;extrude a blob
    G1 Z10 F200 E20; move the extruder up by 10mm while extruding
    G1 E-0.8000 F1800
    G1 X5 Y60 Z11.00 F10000; move away from blob
    G1 X5 Y60 Z0.8 F3000.0 ; move to blob 2 position
    G1 F200 E30 ;extrude a second blob
    #G1 E-0.3000 F1800
    G1 Z10 F200 E20; move the extruder up by 10mm while extruding
    G1 X100 Y100 Z11.00 F10000; move away from blob
    G92 E0 ;Reset Extruder
    G1 Z5.0 F3000 ;Move Z Axis up

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G28 Y
    G28 X
    G90
    # Disable steppers except Z
    M84 X Y E

#[filament_switch_sensor filament_sensor]
#pause_on_runout: True
#runout_gcode:
#    PARK_MACRO
#    M117 Out of Filament
#insert_gcode:
#    M117 Resuming
#    RESUME_MACRO
#event_delay: 3.0
#pause_delay: 0.5
#switch_pin: PG10

[gcode_macro FILAMENT_LOAD]
gcode:
 M83                   # Put the extruder into relative mode
 G92 E0.0              # Reset the extruder so that it thinks it is at position zero
 G1 E150 F350          # Move the extruder forward 120mm at a speed of 350mm/minute
 G92 E0.0              # Reset the extruder again
 M82                   # Put the extruder back into absolute mode.
[gcode_macro FILAMENT_UNLOAD]
gcode:
 M83                   # Put the extruder into relative mode
 G92 E0.0              # Reset the extruder so that it thinks it is at position zero
 G1 E-120 F350          # Move the extruder forward 120mm at a speed of 350mm/minute
 G92 E0.0              # Reset the extruder again
 M82                   # Put the extruder back into absolute mode.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 3.055
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 66.441
#*# pid_ki = 0.762
#*# pid_kd = 1447.573
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 35.380
#*# pid_ki = 8.133
#*# pid_kd = 38.478
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.102939, -0.107939, -0.053356, -0.084189, -0.075856, -0.047939
#*# 	-0.063772, -0.035439, -0.013772, -0.027106, 0.010394, -0.007522
#*# 	-0.056689, -0.014189, 0.004561, 0.007061, 0.013728, -0.022522
#*# 	-0.028356, -0.019189, 0.009561, -0.024189, -0.027522, -0.041689
#*# 	-0.024606, -0.005022, 0.054144, 0.036228, 0.028728, -0.008356
#*# 	-0.053772, 0.018728, 0.010394, 0.041644, -0.028772, -0.055439
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 350.0
#*# min_y = 10.0
#*# max_y = 350.0
